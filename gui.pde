/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:userControlWindow:564233:
  appc.background(230);
} //_CODE_:userControlWindow:564233:

public void wavelengthSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:wavelengthSlider:289796:
  //println("wavelengthSlider - GCustomSlider >> GEvent." + event + " @ " + millis());
  wavelength = wavelengthSlider.getValueI(); 
  redraw();
} //_CODE_:wavelengthSlider:289796:

public void historyLinesButtonClicked(GButton source, GEvent event) { //_CODE_:historyLinesButton:875434:
  numClicks++;
  if (numClicks % 2 == 0){
    showHistoryLines = false;
    historyLinesButton.setText("Show History Lines");
    historyLinesButton.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  }
  else{
    showHistoryLines = true;
    historyLinesButton.setText("Hide History Lines");
    historyLinesButton.setLocalColorScheme(GCScheme.RED_SCHEME);
  }
  //println("historyLinesButton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:historyLinesButton:875434:

public void slitWidthSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:slitWidthSlider:768820:
  w = slitWidthSlider.getValueI();
  redraw();
  //println("slitWidthSlider - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slitWidthSlider:768820:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  userControlWindow = GWindow.getWindow(this, "Window title", 0, 0, 500, 500, JAVA2D);
  userControlWindow.noLoop();
  userControlWindow.setActionOnClose(G4P.KEEP_OPEN);
  userControlWindow.addDrawHandler(this, "win_draw1");
  wavelengthLabel = new GLabel(userControlWindow, 19, 33, 80, 20);
  wavelengthLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  wavelengthLabel.setText("Wavelength");
  wavelengthLabel.setOpaque(false);
  wavelengthSlider = new GCustomSlider(userControlWindow, 102, 24, 360, 63, "grey_blue");
  wavelengthSlider.setShowValue(true);
  wavelengthSlider.setLimits(560, 380, 740);
  wavelengthSlider.setNbrTicks(36);
  wavelengthSlider.setStickToTicks(true);
  wavelengthSlider.setShowTicks(true);
  wavelengthSlider.setNumberFormat(G4P.INTEGER, 0);
  wavelengthSlider.setOpaque(false);
  wavelengthSlider.addEventHandler(this, "wavelengthSliderChanged");
  historyLinesButton = new GButton(userControlWindow, 169, 187, 119, 47);
  historyLinesButton.setText("Show History Lines");
  historyLinesButton.addEventHandler(this, "historyLinesButtonClicked");
  slitWidthLabel = new GLabel(userControlWindow, 22, 103, 80, 20);
  slitWidthLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  slitWidthLabel.setText("Slit Width");
  slitWidthLabel.setOpaque(false);
  slitWidthSlider = new GCustomSlider(userControlWindow, 103, 88, 344, 52, "grey_blue");
  slitWidthSlider.setLimits(10, 50, 100);
  slitWidthSlider.setNumberFormat(G4P.INTEGER, 2);
  slitWidthSlider.setOpaque(false);
  slitWidthSlider.addEventHandler(this, "slitWidthSliderChanged");
  userControlWindow.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow userControlWindow;
GLabel wavelengthLabel; 
GCustomSlider wavelengthSlider; 
GButton historyLinesButton; 
GLabel slitWidthLabel; 
GCustomSlider slitWidthSlider; 
